apiVersion: v1
kind: Template
labels:
  template: redis
metadata:
  annotations:
    description: >
      Redis is an open source key-value store that functions as a data structure server.
      This template provides a persistent instance, recomended when Redis can't lose data
      during service restarts.
    iconClass: icon-redis
    tags: cache,database,redis
  creationTimestamp: null
  name: redis

objects:
- kind: Service
  apiVersion: v1
  metadata:
    creationTimestamp: null
    name: ${NAME}
  spec:
    portalIP: ""
    ports:
    - name: tcp
      nodePort: 0
      port: 6379
      protocol: TCP
      targetPort: 6379
    selector:
      name: ${NAME}
    sessionAffinity: None
    type: ClusterIP
  status:
    loadBalancer: {}

- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    creationTimestamp: null
    name: ${NAME}
    labels:
      name: ${NAME}
  spec:
    replicas: 1
    selector:
      name: ${NAME}
    strategy:
      resources: {}
      type: Recreate
    template:
      metadata:
        creationTimestamp: null
        labels:
          name: ${NAME}
      spec:
        containers:
        - capabilities: {}
          env:
          - name: REDIS_MAX_MEMORY
            value: ${REDIS_MAX_MEMORY}
          - name: REDIS_MAX_MEMORY_POLICY
            value: ${REDIS_MAX_MEMORY_POLICY}
          - name: REDIS_EXTRA_PARAMETERS
            value: ${REDIS_EXTRA_PARAMETERS}
          image: redis
          imagePullPolicy: IfNotPresent
          name: redis
          ports:
          - containerPort: 6379
            protocol: TCP
          resources: {}
          securityContext:
            capabilities: {}
            privileged: false
          terminationMessagePath: /dev/termination-log
          volumeMounts:
          - mountPath: /var/lib/redis/data
            name: ${NAME}-data
        volumes:
        - name: ${NAME}-data
          persistentVolumeClaim:
            claimName: ${NAME}
        dnsPolicy: ClusterFirst
        restartPolicy: Always
    triggers:
    - imageChangeParams:
        automatic: false
        containerNames:
        - redis
        from:
          kind: ImageStreamTag
          name: redis:latest
          namespace: openshift
        lastTriggeredImage: ""
      type: ImageChange
    - type: ConfigChange
  status: {}

- apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: ${NAME}
  spec:
    accessModes:
    - ReadWriteOnce
    resources:
      requests:
        storage: ${VOLUME_CAPACITY}

parameters:
- description: Redis service name
  name: NAME
  required: true
  value: "redis"
- description: "Max memory Redis can use (ex: 512MB)"
  name: REDIS_MAX_MEMORY
  required: false
- description: How Redis will select what to remove when maxmemory is reached
  name: REDIS_MAX_MEMORY_POLICY
  required: false
  value: "allkeys-lru"
- description: Extra command line parameters to start redis
  name: REDIS_EXTRA_PARAMETERS
  required: false
  value: "--maxclients 10000 --tcp-backlog 128 --dbfilename database.rdb --dir /var/lib/redis/data"
- description: Volume space available for data
  name: VOLUME_CAPACITY
  displayName: 'Tamanho do Volume de dados [select:5Gi=5GB:10Gi=10GB:20Gi=20GB]'
  required: true
  value: 5Gi
